---
title: "Growth Changes in NE Shelf Species"
author: 
    name: "Adam A. Kemberling"
    title: "Quantitative Research Associate"
    url: https://github.com/adamkemberling
    affiliation: Gulf of Maine Research Institute
description: | 
 Changes in Size and Weight at Age Across Cohorts
date: "`r Sys.Date()`"
format:
  html:
    self-contained: true
    df-print: kable
    toc: true
    toc-depth: 2
execute: 
  echo: false
  warning: false
  message: false
  eval: true
  fig.height: 6
  fig.width: 6
  fig.align: center
  comment: ""
---

```{r}

####  Packages  ####
{
  library(car)
  library(scales)
  library(patchwork)
  library(directlabels)
  library(xaringanExtra)
  library(ggforce)
  library(colorspace)
  library(gt)
  library(tidyverse)
  library(gmRi)
  library(targets)
  library(ggrepel)
  library(broom)
}


# Set seed
set.seed(3905)

# Set theme
theme_set(theme_gmri())

# Celsius symbol
deg_c <- "\u00b0C"

# Activate panelset
xaringanExtra::use_panelset()

# Function to generate panels using a key word and a plot function
plot_panelset <- function(spec, plot_fun, ...) {
  
  # Open panel
  cat("::: {.panel}\n")
  
  # Create header for panel name
  cat("##", spec, "{.panel-name}\n")

  # # Text as a plot description
  # cat("Plot of", spec, "\n")

  # Make plot
  p <- plot_fun(spec, ...)
  print(p)

  # Add linebreak
  cat("\n")

  # Close panel
  cat(":::\n")
}
```



```{r}
#| label: add-css
#| results: asis
#| 
gmRi::use_gmri_style_rmd(css_file = "gmri_rmarkdown.css")

```

# Decadal Variability in Growth Model Exploration



```{r}
#| label: species-list

# Seasons to include in center of biomass
season_filter <- list(
  "cob" = c("Spring", "Fall"),
  "age" = c("Spring", "Fall"))

#. Species that have center of biomass south of Gulf of Maine
southern_species <- c("atlantic mackerel", "scup", "black sea bass", "butterfish")

# Species to display with their own panels
vb_species <- sort(c(
  #"acadian redfish",
  "american plaice",
  "atlantic cod",
  "atlantic herring",
  "atlantic mackerel",
  "black sea bass",
  "butterfish",
  "haddock", 
  "pollock",
  #"red hake",
  "scup",
  "silver hake",
  #"summer flounder",
  "white hake",
  #"windowpane",
  "winter flounder",
  "witch flounder",
  "yellowtail flounder"
))


# This is what year each species has historically seen plateaus in growth
species_growth_plateaus <- list(
  "american plaice"     = 1980,
  "atlantic cod"        = 1970,
  "atlantic herring"    = 1987,
  "atlantic mackerel"   = 1973,
  "black sea bass"      = 1983,
  "butterfish"          = 1982,
  "haddock"             = 1970,
  "pollock"             = 1970,
  "scup"                = 1971,
  "silver hake"         = 1973,
  "white hake"          = 1982,
  "winter flounder"     = 1976,
  "witch flounder"      = 1982,
  "yellowtail flounder" = 1970) 
```





```{r}
#| label: growth-data-prep

# Access Biological Data with {targets}
withr::with_dir(rprojroot::find_root('_targets.R'), 
                tar_load(survdat_biological))

# 1. Prepare Bio Data for Age analysis for regimes:

# Drop NA age data, restrict to both summer and fall
bio_data <- survdat_biological %>%
  filter(is.na(age) == FALSE,
         season %in% season_filter$age) %>% 
      as.data.frame()
  

# Supplement
# 1. Add regime and decade labels
# 2. Add condition Facotr: Fulton's condition factor
bio_data <- bio_data %>% 
  mutate(
    yearclass = est_year - (age-1),
    regime = ifelse(est_year < 2010, "Early Regime", "Warm Regime"),
    decade = floor_decade(est_year),
    # Fultons condition factor:
    fK = (100 * indwt*1000) / length_cm^3) 

rm(survdat_biological)


####  Growth Data Prep  #### 

# Filter to just the data for the two regimes
bio_regimes <- bio_data %>% 
  filter(est_year >= 1970, est_year <= 2019)

# tidy up
rm(bio_data)
```

The following tables show the available data by species for assessing size-at-age changes among species sample by the federal trawl survey. Each row indicates the number of individuals sampled and aged by the survey program. All species aged will have lengths, but some may not have weights, particularly in earlier years.

```{r}
#| label: limit-years-on-agedata

# Prep data separately for table
age_truncated <- bio_regimes %>% 
    filter(comname %in% vb_species,
           age > 0) %>% 
    complete(comname, est_year) %>% 
    mutate(regime = ifelse(est_year < 2010, "Early Regime", "Warm Regime"),
           age = ifelse(age>10, ">10", age)) %>% 
    mutate(age = fct_drop(age),
           age_tally = ifelse(!is.na(age), 1, 0))
```



```{r}
#| label: age-availability-function


# Function to make a table
species_table <- function(x){
  age_truncated %>% 
    filter(comname == x) %>% 
    group_by(regime, comname, est_year, age) %>% 
    summarise(n_aged = sum(age_tally), .groups = "drop") %>% 
    mutate(age = factor(age, levels = c(as.character(1:10), ">10"))) %>% 
    arrange(age) %>% 
    mutate(age = fct_drop(age)) %>% 
    pivot_wider(names_from = "age", values_from = n_aged) %>% 
    select(-one_of("NA")) %>% 
    group_by(regime, comname) %>% 
    arrange(est_year) %>% 
    gt(rowname_col = "est_year") %>% 
    tab_header(
      title = str_c(str_to_title(x) , " - Individuals Aged by Year"), 
      subtitle = "Numbers Combined from Spring and Fall Surveys") %>% 
    sub_missing(missing_text = "") %>% 
    gt::cols_label("est_year" = "Age:") %>% 
    as_raw_html()
  
  
}

  
```



::: panelset
```{r, results="asis"}
#| label: age-tables

# Loop through the key species:
walk(vb_species, 
     plot_panelset, 
     plot_fun = species_table)

```
:::

# Size at Age Comparisons

Given that we can't really construct meaningful VB curves for cohorts with a 10-year window of interest, we need to consider an alternative way of putting some statistics behind our numbers to assess significance.

I think looking at differences in LaA and WaA over periods of interest will be helpful. I think a useful example to emulate is Fig 3 and Table 1 in the attached Neuheimer and Gronkjaer paper. However, instead of using trend lines and slopes, it would be better to do a Welch's t-test comparing 1970-2009 to 2010-2019 (and plotting means for those periods in the figure).

I'm also still debating whether to use 1970-2009 as the comparison or whether to do just the preceding decade, so seeing Welch's t-test results for 2000-2009 and 2010-2019 would be helpful too.

Please truncate output values to no more than 3 decimal places so it's easier to look at. (We'll want to pull other stats out of the Welch's t-test for the paper, but for shaping the paper, I'd prefer to see less right now.)

These are the methods to use for the tests and for testing assumptions:

**Welch's Two-Sample T-Test**

**Bartletts Two-Sample Test**

# Length at Age

The following tables display the results of two-sample testing comparing the length at age of each species between data from two different periods. Significant differences are highlighted when they occur, and in those rows the larger size period's mean has been highlighted in green, with the smaller sized period's mean highlighted in red.

```{r}
#| label: set-comparison-periods
# Group on common name and time periods and age

# Get the groups we want to compare
year_groups <- list("1970-2009" = c(1970:2009),
                    "2000-2009" = c(2000:2009),
                    "2010-2019" = c(2010:2019))



# Get data into each group
period_groups <- map(year_groups, function(period){
  
  # filter years:
  period_dat <- age_truncated %>% 
    filter(est_year %in% period)
  
  return(period_dat)
  
  })
```


```{r}
#| label: set-species-age ranges


# Set the Age ranges for each species:
ages_to_test <- list(
  # "acadian redfish"     = c(1:15),
  "american plaice"     = c(1:9),
  "atlantic cod"        = c(1:7),
  "atlantic herring"    = c(1:8),
  "atlantic mackerel"   = c(1:5),
  "black sea bass"      = c(1:5),
  "butterfish"          = c(1:4),
  "haddock"             = c(1:10),
  "pollock"             = c(1:8),
  # "red hake"            = c(1:12),
  "scup"                = c(1:4),
  "silver hake"         = c(1:5),
  # "summer flounder"     = c(1:12),
  "white hake"          = c(1:7),
  # "windowpane"          = c(1:8),
  "winter flounder"     = c(1:8),
  "witch flounder"      = c(1:8),
  "yellowtail flounder" = c(1:6)
)





```








```{r}
#| label: ageclass-ttest-function

# This function is looped through once for each ageclass


# Function to compare a single ageclass:
ageclass_ttest <-  function(age_x, species_data = both_periods_df, dependent_var = {{test_var}}){
  
    # Subset the age class
    age_subset <- dplyr::filter(species_data, age == age_x)
    
    # Set formula to change dynamically to function input:
    test_formula <- formula(str_c(dependent_var, " ~ comparison_period"))
    
    # Run the comparison of means
    
    tidy_t <-  t.test(test_formula, data = age_subset) %>% 
      tidy() %>% 
      select(estimate1, estimate2, method, p.value)

  tidy_b <- tidy(bartlett.test(length_cm ~ comparison_period, data = age_subset)) %>% 
    select(variance_test = method, 
           bartlett_p =  p.value)

  # Make an output table
  bind_cols(
    list(
      data.frame(
        "comparison_var" = dependent_var,
        "statistical_test" = "two sample t.test"),
        tidy_t,
        tidy_b))}


```






```{r}
#| label: species-ageclass-function

# Function to take each species and compare some variable across comparison periods
# Reports the mean across both periods, and t-test results
species_ageclass_ttests <- function(
    comname_x, 
    group_1 = "1970-2009", 
    group_2 = "2010-2019", 
    test_var = "length_cm"){

  
  
  # 1. Make names for the two groups/regimes
  regime_names <- c(group_1, group_2)
  
  
  # 2. Grab their data and put into a table, set the levels so group_1 is the first factor level
  both_periods_df <- bind_rows(
      list(filter(period_groups[[group_1]], comname == comname_x) %>% drop_na(age, {{test_var}}),
           filter(period_groups[[group_2]], comname == comname_x) %>% drop_na(age, {{test_var}})) %>% 
        setNames(regime_names),
      .id = "comparison_period") %>% 
    mutate(comparison_period = factor(comparison_period, levels = regime_names))
  
  
  
  
  # 2. Run the ttest comparison for each ageclass:
  
  # Map the ages for that species
  ageclass_comparisons <- map_dfr(
    ages_to_test[[comname_x]], 
    possibly(
      .f = ~ageclass_ttest(.x, species_data = both_periods_df, dependent_var = test_var),
    
      # Make a fail state that lets some ages through
      otherwise = 
        data.frame(
          "comparison_var" = test_var,
          "statistical_test" = "two sample t.test", 
          "estimate1" = NA,    
          "estimate2" = NA,    
          "method" = NA,           
          "p.value" = NA,          
          "variance_test" = NA,    
          "bartlett_p" = NA)),
      .id = "age") 
  

  # 3. Do minor renaming and adjusting
  ageclass_comparisons <- ageclass_comparisons %>% 
    mutate(age = as.numeric(as.character(age))) %>% 
    rename({{group_1}} := estimate1) %>% 
    rename({{group_2}} := estimate2)
  
  
  # Get the number of values for each age-class in each comparison period
  ages_tested <- both_periods_df %>% 
    filter(age %in% ages_to_test[[comname_x]]) %>% 
    group_by(comparison_period, age) %>% 
    summarise(n_obs = n(),
              n_years = n_distinct(est_year),
              .groups = "drop") %>% 
    mutate(obs_per_yr = n_obs / n_years,
           age = as.numeric(as.character(age)))
  
  # Reshape it so it can join to the comparison results:
  species_results <- ages_tested %>% 
    pivot_wider(names_from = comparison_period, values_from = c(n_obs, n_years, obs_per_yr)) %>% 
    left_join(ageclass_comparisons, by = "age") %>% 
    arrange(age)
  
  # Add what year the earliest measurement came from:
  earliest_measure <- both_periods_df %>% pull(est_year) %>% min()
  species_results <- mutate(species_results, earliest_measure = earliest_measure, .after = "comparison_var")
  
  return(species_results)
}

```


```{r}
#| label: allage-function-testing
#| eval: false


# Testing if we can go through all ages for a species
species_ageclass_ttests(
  comname_x = "haddock", 
  group_1 = "1970-2009", 
  group_2 = "2010-2019", 
  test_var = "indwt")



#label: function-mapping-testing
# eval: false


# Testing if we can loop through all species
map_dfr(setNames(vb_species, vb_species), 
        possibly(
          .f = ~ species_ageclass_ttests(comname_x = .x, 
                                         group_1 = "1970-2009", 
                                         group_2 = "2010-2019", 
                                         test_var = "length_cm"),
          otherwise = data.frame(
            "age" = NA,
            "n_obs_1970-2009" = NA,
            "n_obs_2010-2019" = NA,
            "n_years_1970-2009" = NA,    
            "n_years_2010-2019" = NA,    
            "obs_per_yr_1970-2009" = NA,
            "obs_per_yr_2010-2019" = NA, 
            "comparison_var" = NA,
            "earliest_measure" = NA,
            "statistical_test" = "two sample t.test", 
            "mean1970_2009" = NA,    
            "mean2010_2019" = NA,   
            "method" = NA,         
            "p.value" = NA,          
            "variance_test" = NA,    
            "bartlett_p" = NA)), 
        .id = "comname")
```




::: panel-tabset

### 1970-2009 & 2010 - 2019


```{r}
#| label: length_at_age_comparisons1

# Perform Length at Age T Tests
laa_1970_start <- map_dfr(
  # Species to loop through
  .x = setNames(vb_species, vb_species), 
  
  # Handle errors/failures
  .f = possibly(
    
    # Function to loop through for species
    .f = ~ species_ageclass_ttests(
      comname_x = .x, 
      group_1 = "1970-2009", 
      group_2 = "2010-2019", 
      test_var = "length_cm"),
    
    otherwise = data.frame(
      "age" = NA,
      "n_obs_1970-2009" = NA,
      "n_obs_2010-2019" = NA,
      "n_years_1970-2009" = NA,    
      "n_years_2010-2019" = NA,    
      "obs_per_yr_1970-2009" = NA,
      "obs_per_yr_2010-2019" = NA, 
      "comparison_var" = NA,
      "earliest_measure" = NA,
      "statistical_test" = "two sample t.test", 
      "1970-2009" = NA,    
      "2010_2019" = NA,   
      "method" = NA,         
      "p.value" = NA,          
      "variance_test" = NA,    
      "bartlett_p" = NA)), 
    .id = "comname")
```


```{r}
#| label: size-at-age-table-function

# Make Tables for Each Species to Reduce Code Length
saa_table <- function(
    comname_x, 
    saa_results, 
    period_1 = "1970-2009",
    period_2 = "2010-2019", 
    var_title = "Length at Age"){
  
  # Pull a single species by name, drop some columns, round
  saa_table_data <- saa_results %>% 
    filter(comname == comname_x) %>% 
    select(-c(statistical_test, variance_test, method)) %>% 
    select(-c(3,4,5,6)) %>% 
    rename(obs_early = 3,
           obs_late = 4) %>% 
    mutate(across(where(is.numeric), round, 2)) %>% 
    select(comname, 
           Variable = comparison_var, 
           age, 
           "Data\nBegins" = earliest_measure, 
           "N / year\nEarly" = obs_early,
           "N / year\nLate" = obs_late,
           "Early\nAverage" = {{period_1}}, 
           "Late\nAverage" = {{period_2}},
           p.value,
           bartlett_p) %>% 
    group_by(comname) 
  #return(saa_table_data)
  
  # Change the coverage to reflect data availability
  actual_start <- saa_table_data %>% distinct(`Data\nBegins`) %>% pull(`Data\nBegins`)
  period_1 <- str_c(actual_start, "-2009")
  
  # Make gt table
  saa_table_data %>% 
    gt(rowname_col = "age") %>% 
    sub_missing(missing_text = "") %>% 
    tab_header(title = str_c(str_to_title(comname_x), " ", var_title, "  - Two-Sample Test"), 
               subtitle = str_c("Comparison of ", period_1, " & ", period_2, " Data")) %>% 
    tab_style(
      style = list(cell_fill(color = "#A4D1A2")),
      locations = cells_body(
        columns = `Early\nAverage`, 
        rows = p.value < 0.05 & `Early\nAverage` > `Late\nAverage`)) %>% 
    tab_style(
      style = list(cell_fill(color = "#F9E3D6")),
      locations = cells_body(
        columns = `Early\nAverage`, 
        rows = p.value < 0.05 & `Early\nAverage` < `Late\nAverage`)) %>% 
    tab_style(
      style = list(cell_fill(color = "#A4D1A2")),
      locations = cells_body(
        columns = `Late\nAverage`, 
        rows = p.value < 0.05 & `Early\nAverage` < `Late\nAverage`)) %>% 
    tab_style(
      style = list(cell_fill(color = "#F9E3D6")),
      locations = cells_body(
        columns = `Late\nAverage`, 
        rows = p.value < 0.05 & `Early\nAverage` > `Late\nAverage`)) %>% 
    tab_style(
        style = list(cell_fill(color = "#A4D1A2")),
        locations = cells_body(columns = p.value, rows = p.value < 0.05)) %>% 
    tab_style(
        style = list(cell_fill(color = "#A4D1A2")),
        locations = cells_body(columns = bartlett_p, rows = bartlett_p < 0.05)) %>% 
    as_raw_html()
  
  
}


```


```{r}
#| label: saa-table-test
#| eval: false

saa_table("haddock", saa_results = laa_1970_start, period_1 = "1970-2009", period_2 = "2010-2019")

```




::: panelset
```{r, results="asis"}
#| label: laa-tables-1

# Loop through the key species:
walk(vb_species, 
     plot_panelset, 
     plot_fun = saa_table,
     saa_results = laa_1970_start,
     period_1 = "1970-2009",
     period_2 = "2010-2019",
     var_title = " Length at Age")

```
:::



### 2000-2009 & 2010-2019

```{r}
#| eval: true


# Perform Length at Age Tests Tests
laa_2000_start <- map_dfr(
  .x = setNames(vb_species, vb_species), 
  .f = possibly(
    
    .f = ~ species_ageclass_ttests(
      comname_x = .x, 
      group_1 = "2000-2009", 
      group_2 = "2010-2019", 
      test_var = "length_cm"),
    
    otherwise = data.frame(
      "age" = NA,
      "n_obs_2000-2009" = NA,
      "n_obs_2010-2019" = NA,
      "n_years_2000-2009" = NA,    
      "n_years_2010-2019" = NA,    
      "obs_per_yr_2000-2009" = NA,
      "obs_per_yr_2010-2019" = NA, 
      "comparison_var" = NA,
      "earliest_measure" = NA,
      "statistical_test" = "two sample t.test", 
      "2000-2009" = NA,    
      "2010_2019" = NA,   
      "method" = NA,         
      "p.value" = NA,          
      "variance_test" = NA,    
      "bartlett_p" = NA)), 
    .id = "comname")


```




::: panelset
```{r, results="asis"}
#| label: laa-tables-2
#| eval: false

# Loop through the key species:
walk(vb_species, 
     plot_panelset, 
     plot_fun = saa_table,
     saa_results = laa_2000_start,
     period_1 = "2000-2009",
     period_2 = "2010-2019",
     var_title = " Length at Age")

```
:::



:::



# Weight at Age


The following tables display the results of two-sample testing comparing the weight at age of each species between data from two different periods. Significant differences are highlighted when they occur, and in those rows the larger size period's mean has been highlighted in green, with the smaller sized period's mean highlighted in red.

::: panel-tabset

### 1970-2009 & 2010-2019


```{r}
#| eval: true


# Perform Length at Age Tests Tests
waa_1970_start <- map_dfr(
  .x = setNames(vb_species, vb_species), 
  .f = possibly(
    
    .f = ~ species_ageclass_ttests(
      comname_x = .x, 
      group_1 = "1970-2009", 
      group_2 = "2010-2019", 
      test_var = "indwt"),
    
    otherwise = data.frame(
      "age" = NA,
      "n_obs_1970-2009" = NA,
      "n_obs_2010-2019" = NA,
      "n_years_1970-2009" = NA,    
      "n_years_2010-2019" = NA,    
      "obs_per_yr_1970-2009" = NA,
      "obs_per_yr_2010-2019" = NA, 
      "comparison_var" = NA,
      "earliest_measure" = NA,
      "statistical_test" = "two sample t.test", 
      "1970-2009" = NA,    
      "2010_2019" = NA,   
      "method" = NA,         
      "p.value" = NA,          
      "variance_test" = NA,    
      "bartlett_p" = NA)), 
    .id = "comname")


```




::: panelset
```{r, results="asis"}
#| label: waa-tables-1

# Loop through the key species:
walk(vb_species, 
     plot_panelset, 
     plot_fun = saa_table,
     saa_results = waa_1970_start,
     period_1 = "1970-2009",
     period_2 = "2010-2019",
     var_title = " Weight at Age")

```
:::




### 2000-2009 & 2010-2019


```{r}
#| eval: true

# Perform Length at Age Tests Tests
waa_2000_start <- map_dfr(
  .x = setNames(vb_species, vb_species), 
  .f = possibly(
    
    .f = ~ species_ageclass_ttests(
      comname_x = .x, 
      group_1 = "2000-2009", 
      group_2 = "2010-2019", 
      test_var = "indwt"),
    
    otherwise = data.frame(
      "age" = NA,
      "n_obs_2000-2009" = NA,
      "n_obs_2010-2019" = NA,
      "n_years_2000-2009" = NA,    
      "n_years_2010-2019" = NA,    
      "obs_per_yr_2000-2009" = NA,
      "obs_per_yr_2010-2019" = NA, 
      "comparison_var" = NA,
      "earliest_measure" = NA,
      "statistical_test" = "two sample t.test", 
      "2000-2009" = NA,    
      "2010_2019" = NA,   
      "method" = NA,         
      "p.value" = NA,          
      "variance_test" = NA,    
      "bartlett_p" = NA)), 
    .id = "comname")


```




::: panelset
```{r, results="asis"}
#| label: waa-tables-2
#| eval: false

# Loop through the key species:
walk(vb_species, 
     plot_panelset, 
     plot_fun = saa_table,
     saa_results = waa_2000_start,
     period_1 = "2000-2009",
     period_2 = "2010-2019",
     var_title = " Weight at Age")

```
:::

:::


# Condition Factor at Age

The following tables display the results of two-sample testing comparing fulton's condition factor at age of each species between data from two different periods. Significant differences are highlighted when they occur, and in those rows the larger size period's mean has been highlighted in green, with the smaller sized period's mean highlighted in red.

::: panel-tabset

### 1970-2009 & 2010 - 2019


```{r}
# Perform Length at Age Tests Tests
condition_1970_start <- map_dfr(
  .x = setNames(vb_species, vb_species), 
  .f = possibly(
    
    .f = ~ species_ageclass_ttests(
      comname_x = .x, 
      group_1 = "1970-2009", 
      group_2 = "2010-2019", 
      test_var = "fK"),
    
    otherwise = data.frame(
      "age" = NA,
      "n_obs_1970-2009" = NA,
      "n_obs_2010-2019" = NA,
      "n_years_1970-2009" = NA,    
      "n_years_2010-2019" = NA,    
      "obs_per_yr_1970-2009" = NA,
      "obs_per_yr_2010-2019" = NA, 
      "comparison_var" = NA,
      "earliest_measure" = NA,
      "statistical_test" = "two sample t.test", 
      "1970-2009" = NA,    
      "2010_2019" = NA,   
      "method" = NA,         
      "p.value" = NA,          
      "variance_test" = NA,    
      "bartlett_p" = NA)), 
    .id = "comname")


```




::: panelset
```{r, results="asis"}
#| label: condition-tables-1
#| eval: false

# Loop through the key species:
walk(vb_species, 
     plot_panelset, 
     plot_fun = saa_table,
     saa_results = condition_1970_start,
     period_1 = "1970-2009",
     period_2 = "2010-2019",
     var_title = " Condition (K) at Age")

```
:::


### 2000-2009 & 2010-2019


```{r}
#| eval: true


# Perform Length at Age Tests Tests
condition_2000_start <- map_dfr(
  .x = setNames(vb_species, vb_species), 
  .f = possibly(
    
    .f = ~ species_ageclass_ttests(
      comname_x = .x, 
      group_1 = "2000-2009", 
      group_2 = "2010-2019", 
      test_var = "fK"),
    
    otherwise = data.frame(
      "age" = NA,
      "n_obs_2000-2009" = NA,
      "n_obs_2010-2019" = NA,
      "n_years_2000-2009" = NA,    
      "n_years_2010-2019" = NA,    
      "obs_per_yr_2000-2009" = NA,
      "obs_per_yr_2010-2019" = NA, 
      "comparison_var" = NA,
      "earliest_measure" = NA,
      "statistical_test" = "two sample t.test", 
      "2000-2009" = NA,    
      "2010_2019" = NA,   
      "method" = NA,         
      "p.value" = NA,          
      "variance_test" = NA,    
      "bartlett_p" = NA)), 
    .id = "comname")


```




::: panelset
```{r, results="asis"}
#| label: condition-tables-2
#| eval: false

# Loop through the key species:
walk(vb_species, 
     plot_panelset, 
     plot_fun = saa_table,
     saa_results = condition_2000_start,
     period_1 = "2000-2009",
     period_2 = "2010-2019",
     var_title = " Condition (K) at Age")

```
:::

:::





# Size at Maturity

Length and weight at first maturity for each species has been taken from [NOAA fisheries](https://www.fisheries.noaa.gov/new-england-mid-atlantic/science-data/introduction-age-determination-methods-northwest-atlantic-species) and stock assessment report citations when no webpage was available. Values reported in the table below are either the higher value of a 1-year range given, or the middle value of 3-year ranges reported. References can be found in the decadal variability folder on Box.

```{r}

size_at_maturity <- tribble(
  ~"Common Name",          ~"Age at Maturity",
  "american plaice",       3, 
  "atlantic cod",          3, 
  "atlantic herring",      4, 
  "atlantic mackerel",     3, 
  "black sea bass F",      2, 
  "black sea bass M",      4, 
  "butterfish",            2,  
  "haddock",               2,   
  "pollock",               4,    
  "scup",                  2,  
  "silver hake",           2,  
  "white hake",            2,  
  "winter flounder",       2,    
  "witch flounder",        5,    
  "yellowtail flounder",   3
)

```



# Significant Growth Differences

With the exception of silver hake, all species in these tests are significantly smaller at older ages. There are instances where species are larger at their earliest ages (1-4 years of age), but their growth then plateaus and they ultimately reach a smaller adult size. Black sea bass is another possible exception, showing some age-classes with smaller lengths and weights, but not in a consistent pattern with increasing age. 



::: {.panel-tabset}
  
### 1970-2009 vs. 2009-2019
  
  
  
### Exporting length and weight results

```{r}
#| label: export-wide-1970
len_results <- laa_1970_start  %>% 
  rename(mean_1970_2009 = `1970-2009`,
         mean_2010_2019 = `2010-2019`) %>% 
  mutate(percent_change = ((mean_2010_2019-mean_1970_2009)/mean_1970_2009)*100, 
         .after = "mean_2010_2019") %>% 
  mutate(early_period_coverage = str_c(earliest_measure, "-2009"), .after = "earliest_measure") %>% 
  select(-c(method, variance_test, comparison_var, statistical_test, earliest_measure)) %>% 
  rename_with(~str_c("l_", .), 3:14) 

wt_results <- waa_1970_start %>% 
  rename(mean_1970_2009 = `1970-2009`,
         mean_2010_2019 = `2010-2019`) %>% 
  mutate(percent_change = ((mean_2010_2019-mean_1970_2009)/mean_1970_2009)*100, 
         .after = "mean_2010_2019") %>% 
  mutate(early_period_coverage = str_c(earliest_measure, "-2009"), .after = "earliest_measure") %>% 
  select(-c(method, variance_test, comparison_var, statistical_test, earliest_measure)) %>% 
  rename_with(~str_c("w_", .), 3:14) 

results_wide <- left_join(len_results, wt_results, by = c("comname", "age"))

# Path to decadal folder:
decadal_folder <- cs_path(box_group = "mills", subfolder = "Projects/Decadal Variability/Growth Results")


write_csv(results_wide, str_c(decadal_folder, "length_and_weight_atage_ttest_results.csv"))
```



  

```{r}
#| eval: true
# Exporting the data for Kathy
# Format data for the first comparison periods:



#-----------------------

# Pull the comparisons for 1970-2009 vs. 2010-2019
pair_1_results <-  bind_rows(
  list(
    "length-at-age-1970-2009"    = laa_1970_start,  
    "weight-at-age-1970-2009"    = waa_1970_start,  
    "condition-at-age-1970-2009" = condition_1970_start), 
  .id = "comparison_variable") %>% 
  mutate(early_period_coverage = str_c(earliest_measure, "-2009"))


# make a "late period" for the 2010-2019 also, then rename early & late period means
pair_1_results_tidy <- pair_1_results %>% 
  mutate(late_period_coverage = "2010-2019") %>% 
  select(
    comparison_variable,
    comparison_var,
    early_period_coverage, 
    late_period_coverage, 
    comname,
    age,
    early_period_obs_per_yr = `obs_per_yr_1970-2009`,
    late_period_obs_per_yr = `obs_per_yr_2010-2019`,
    early_period_mean = `1970-2009`,
    late_period_mean = `2010-2019`,
    p.value,
    bartlett_p) %>% 
  mutate(percent_change = ((late_period_mean-early_period_mean)/early_period_mean)*100, 
         .after = "late_period_mean") %>% 
  mutate(across(where(is.numeric), round, 3))


#--------------------


# Pull the comparisons for 2000-2009 vs. 2010-2019
pair_2_results <-  bind_rows(
  list(
    "length-at-age-2000-2009"     = laa_2000_start,
    "weight-at-age-2000-2009"     = waa_2000_start,
    "condition-at-age-2000-2009" = condition_2000_start), 
  .id = "comparison_variable")





# Make an "early period column" to be consistent with group one
# make a "late period" for the 2010-2019 also, then rename early & late period means
pair_2_results_tidy <- pair_2_results %>% #names()
  mutate(early_period_coverage = "2000-2009",
         late_period_coverage = "2010-2019") %>% 
  select(
    comparison_variable,
    comparison_var,
    early_period_coverage, 
    late_period_coverage, 
    comname,
    age,
    early_period_obs_per_yr = `obs_per_yr_2000-2009`,
    late_period_obs_per_yr = `obs_per_yr_2010-2019`,
    early_period_mean = `2000-2009`,
    late_period_mean = `2010-2019`,
    p.value,
    bartlett_p) %>% 
  mutate(percent_change = ((late_period_mean-early_period_mean)/early_period_mean)*100, 
         .after = "late_period_mean") %>% 
  mutate(across(where(is.numeric), round, 3))


# Put all the results into one table
all_results <- bind_rows(pair_1_results_tidy, pair_2_results_tidy)
```


```{r}
#| label: winloss-table-1970


#---------------------




# palette for bars
winloss_pal <- c(gmri_cols("blue"), gmri_cols("orange"), "gray70")


# Prepare data in list for bars
winloss_results_1 <- all_results %>% 
  filter(early_period_coverage != "2000-2009") %>% 
  select(`comparison_variable`, comname, age, comparison_var, 
         early_period_mean, 
         late_period_mean, 
         p.value) %>% 
  drop_na() %>% 
  group_by(comname, comparison_var) %>% 
  arrange(age) %>% 
  mutate(wins = case_when(
    p.value > 0.05 ~ 0.5,
    p.value < 0.05 & early_period_mean > late_period_mean ~ 0,
    p.value < 0.05 & early_period_mean < late_period_mean ~ 1)) %>% 
  summarize(wins = list(wins), .groups = "drop") 





# Assemble the table
winloss_results_1 %>% 
  mutate(
    comparison_var = ifelse(comparison_var == "indwt", "Individual Weight", comparison_var),
    comparison_var = ifelse(comparison_var == "length_cm", "Individual Length", comparison_var),
    comparison_var = ifelse(comparison_var == "fK", "Condition (k)", comparison_var),
    comname = str_to_title(comname)) %>% 
  pivot_wider(names_from = comparison_var, values_from = wins) %>% 
  select(comname, `Individual Length`, `Individual Weight`) %>% 
  gt(rowname_col = "comname") %>%
  # tab_header(
  #   title = "Changes in Size-At-Age Characteristics",
  #   subtitle = "Significant changes in size moving from 1970-2009 & to 2010-2019 size-at-age data") %>% 
  gtExtras::gt_plt_winloss(`Individual Weight`, palette = winloss_pal) %>% 
  gtExtras::gt_plt_winloss(`Individual Length`, palette = winloss_pal) %>% 
  tab_spanner(
    label = "Size-at-Age Differences",
    columns = c(`Individual Length`, `Individual Weight`)) %>% 
  tab_footnote(
    footnote = md('Colored bars indicate the change in an ageclass characteristic moving from the periods of 1970-2009 to 2010-2019. Bars in <a style="color:#EA4F12">orange indicate significant declines in length or weight.</a> Bars colored in <a style="color:#00608A">blue indicate significant increases in length or weight.</a> And bars in <a style="color:#B3B3B3">gray</a> indicate no difference in ageclass characteristics.</a>' ),
    locations = cells_column_labels(
      columns = c(`Individual Length`, `Individual Weight`)
  )) %>% 
  gt::cols_label(
    `Individual Length` = md("**Length**"),
    `Individual Weight` = md("**Weight**"))


```



### 2000-2009 vs. 2010-2019
  
  

```{r}
#| eval: false


# Prepare data in list for bars
winloss_results_2 <- all_results %>% 
  filter(early_period_coverage == "2000-2009") %>% 
  select(`comparison_variable`, comname, age, comparison_var, 
         early_period_mean,
         late_period_mean, 
         p.value) %>% 
  drop_na() %>% 
  group_by(comname, comparison_var) %>% 
  arrange(age) %>% 
  mutate(wins = case_when(
    p.value > 0.05 ~ 0.5,
    p.value < 0.05 & early_period_mean > late_period_mean ~ 0,
    p.value < 0.05 & early_period_mean < late_period_mean ~ 1)
    ) %>% 
  summarize(wins = list(wins), .groups = "drop") 



# Assemble the table
winloss_results_2 %>% 
  mutate(
    comparison_var = ifelse(comparison_var == "indwt", "Individual Weight", comparison_var),
    comparison_var = ifelse(comparison_var == "length_cm", "Individual Length", comparison_var),
    comparison_var = ifelse(comparison_var == "fK", "Condition (k)", comparison_var),
    comname = str_to_title(comname)) %>% 
  pivot_wider(names_from = comparison_var, values_from = wins) %>% 
  select(comname, `Individual Length`, `Individual Weight`) %>% 
  gt(rowname_col = "comname") %>%
  # tab_header(
  #   title = "Changes in Size-At-Age Characteristics",
  #   subtitle = "Significant changes in size moving from 2000-2009 & to 2010-2019 size-at-age data") %>% 
  gtExtras::gt_plt_winloss(`Individual Weight`, palette = winloss_pal) %>% 
  gtExtras::gt_plt_winloss(`Individual Length`, palette = winloss_pal) %>% 
  tab_spanner(
    label = "Size-at-Age Differences",
    columns = c(`Individual Length`,`Individual Weight`)) %>% 
  tab_footnote(
    footnote = md('Colored bars indicate the change in an ageclass characteristic moving from the periods of 2000-2009 to 2010-2019. Bars in <a style="color:#EA4F12">orange indicate significant declines in length or weight.</a> Bars colored in <a style="color:#00608A">blue indicate significant increases in length or weight.</a> And bars in <a style="color:#B3B3B3">gray</a> indicate no difference in ageclass characteristics.</a>' ),
    locations = cells_column_labels(
      columns = c(`Individual Length`, `Individual Weight`))) %>% 
  gt::cols_label(
    `Individual Length` = md("**Length**"),
    `Individual Weight` = md("**Weight**"))

```


  
:::



# Size at Age in Time

The following two sets of figures display what the average length or weight was each year for a given species. Means have been overlaid for the groups of years we are comparing above.

```{r}
# Get the average ageclass size for all species:
size_at_ages_all <- age_truncated %>% 
  group_by(comname, year = est_year, age) %>% 
  summarise(
    avg_len = mean(length_cm, na.rm =T),
    avg_wt = mean(indwt, na.rm =T),
    avg_condition = mean(fK, na.rm =T),
    .groups = "drop") %>% 
  complete(comname, year, age)
```


```{r}
# Function to plot the Size at Age differences
mean_saa_plots <- function(comname_x, test_var = avg_len, var_label = "Average Length (cm)"){
  
  # Data for lines
  size_at_age_data <- size_at_ages_all %>% 
    filter(comname == comname_x,
           age %in% ages_to_test[[comname_x]]) 
  
  
  
  # Set a more accurate left-lim for species that were aged starting later
  true_left <- size_at_age_data %>% drop_na({{test_var}}) %>% pull(year) %>% min()
  
  
  # Data for period averages
  period_list <- list("period_1" = c(1970:2009), "period_3" = c(2010:2019))
  
  # Data to get averages
  species_dat <- filter(age_truncated, comname == comname_x, age %in% ages_to_test[[comname_x]])
  
  # Get the means over that range, make a dataframe of x, xend, y, yend for segments
  period_means <- imap_dfr(period_list, function(period_years, period_name){
    species_dat %>% 
      filter(est_year %in% period_years) %>% 
      group_by(comname, age) %>% 
  summarise(
    avg_len       = mean(length_cm, na.rm =T),
    avg_wt        = mean(indwt, na.rm =T),
    avg_condition = mean(fK, na.rm =T),
    .groups = "drop") %>% 
      mutate(x = ifelse(period_name == "period_1", true_left, min(period_years)), 
             xend = max(period_years))
  }, .id = "period")  %>% 
    mutate(age_alpha = as.numeric(as.character(age)),
           age_alpha = ifelse(is.na(age_alpha), max(age_alpha, na.rm = T) + 1, age_alpha))
  
  #return(period_means)
  
  # Make the plot with means for periods
  size_at_age_data %>% 
  ggplot(aes(year, {{test_var}})) +
    geom_line(aes(group = age), color = gmri_cols("light gray"), linewidth = 0.5) +
    geom_point(aes(group = age), color = "black", size = 0.5) +
    geom_segment(
      data = period_means,
      aes(x = x, xend = xend, y = {{test_var}}, yend = {{test_var}}, group = age, color = period#, alpha = age_alpha
          ),
      linewidth = 1.2, show.legend = FALSE) +
      scale_color_manual(values = c(gmri_cols("blue"), gmri_cols("orange"))) +
      scale_x_continuous(limits = c(true_left, 2019)) +
      #scale_alpha_continuous(trans = reverse_trans()) +
      labs(title = toupper(comname_x), y = var_label, x = "Year")
  
}
  

```

## Length at Age


::: panelset
```{r, results="asis"}

# Loop through the key species:
walk(vb_species, 
     plot_panelset, 
     plot_fun = mean_saa_plots,
     test_var = avg_len,
     var_label = "Individual Length (cm)")

```
:::


## Weight at Age


::: panelset
```{r, results="asis"}

# Loop through the key species:
walk(vb_species, 
     plot_panelset, 
     plot_fun = mean_saa_plots,
     test_var = avg_wt,
     var_label = "Individual Weight (kg)")

```
:::


## Cohort Decadal Growth Differences

The following figures display what the average length or weight was for individuals **born** in a given decade. Means for each decade have been overlaid. No data for individuals born before 1970 were included here.

```{r}
# Display the lines for size at age starting at a 0 and extending out

decadal_growth_lines <- function(comname_x, option = "length"){
  
  # Data to get averages
  species_dat <- filter(age_truncated, 
                        comname == comname_x,
                        age %in% ages_to_test[[comname_x]])
  
  # Get the averages for each year, give labels for display groups
  age_lines <- species_dat %>% 
      filter(yearclass >= 1970) %>% 
      group_by(comname, birthyear = yearclass,  age) %>% 
    summarise(
      avg_len = mean(length_cm, na.rm =T),
      avg_wt  = mean(indwt, na.rm =T),
      avg_condition = mean(fK, na.rm =T),
      .groups = "drop") %>% 
    mutate(birthdecade =floor_decade(birthyear),
           age = factor(age, levels = c(1:10, ">10")))
  
  #return(age_lines)
  
  # Make decadal averages
  decade_lines <- species_dat %>%
    filter(yearclass>= 1970) %>% 
    mutate(birthdecade =floor_decade(yearclass)) %>% 
    group_by(comname, birthdecade,  age) %>% 
    summarise(
      avg_len = mean(length_cm, na.rm =T),
      avg_wt = mean(indwt, na.rm =T),
      avg_condition = mean(fK, na.rm =T),
      .groups = "drop")
  
  #return(decade_lines)
  
      
  # Average Length
  len_plot <- ggplot(age_lines, aes(age, avg_len)) +
    geom_line(aes(group = birthyear, color = birthdecade), alpha = 0.2, linewidth = 0.5) +
    scale_color_gmri() +
    geom_line(data = decade_lines, aes(group = birthdecade, color = birthdecade), linewidth = 1) +
    geom_dl(data = decade_lines, aes(group = birthdecade, color = birthdecade, label = birthdecade, fontface = "bold"), method="last.points") +
    scale_x_discrete(expand = expansion(add = c(0,1))) +
    labs(title = toupper(comname_x), y = "Average Length (cm)", x = "Age", color = "Decade of Birth")
  
  

  
 
    # Average Weight
  wt_plot <- ggplot(age_lines, aes(age, avg_wt)) +
    geom_line(aes(group = birthyear, color = birthdecade), alpha = 0.2, linewidth = 0.5) +
    scale_color_gmri() +
    geom_line(data = decade_lines, aes(group = birthdecade, color = birthdecade), linewidth = 1) +
    geom_dl(data = decade_lines, aes(group = birthdecade, color = birthdecade, label = birthdecade, fontface = "bold"), method="last.points") +
    scale_x_discrete(expand = expansion(add = c(0,1))) +
    labs(title = toupper(comname_x), y = "Average Weight (kg)", x = "Age", color = "Decade of Birth")
  
  
  
  if(option == "length"){return(len_plot)}
  if(option == "weight"){return(wt_plot)}
  
  if(option == "both"){
    both_p <- (len_plot / (wt_plot + labs(title = NULL))) + plot_layout(guides = "collect")
    return(both_p)
  }
}

```



### Decadal Length

::: panelset
```{r, results="asis"}
#| fig-height: 6

# Loop through the key species:
walk(vb_species, 
     plot_panelset, 
     plot_fun = decadal_growth_lines,
     option = "length")

```
:::

### Decadal Weight

::: panelset
```{r, results="asis"}
#| fig-height: 6

# Loop through the key species:
walk(vb_species, 
     plot_panelset, 
     plot_fun = decadal_growth_lines,
     option = "weight")

```
:::



```{r}
#| eval: true
#| label: export_table

write_csv(all_results, here::here("R/size_at_age/size_at_age_local_data/size_at_age_two_sample_tests.csv"))

```

