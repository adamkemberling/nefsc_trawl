---
title: "Center of Biomass Conditions"
author: 
    name: "Adam Kemberling"
    url: https://github.com/adamkemberling
    affiliation: Gulf of Maine Research Institute
description: | 
  Environmental Conditions at Encounter Locations for Marine Species
date: "Updated on: `r Sys.Date()`"
format: 
  html:
    code-fold: true
    code-tools: true
    df-print: kable
editor: visual
execute: 
  echo: true
  warning: false
  message: false
  fig.height: 10
  fig.width: 6
  fig.align: "center"
  comment: ""
---

### Encounter Temperatures of Size-at-Age Species

Species encountering temperature changes may respond to a changing environment in a number of ways. One approach is that species may choose to change location to a more suitable environment. However; this approach may not be an option for all species. Certain species, and individuals of other species, may lack the mobility/awareness needed to relocate and must survive/persist in the new environment.

This document will look at the different temperatures that species have been caught at. Temperatures will be taken from the CTD casts deployed as part of the groundfish survey to take advantage of bottom temperatures.

The general hypothesis follows that species that are better able to track favorable temperatures should experience a lesser physiological toll than species that are unable to track temperature change. Changes in size-at-age should consequently be smaller in highly mobile species than less adaptable ones.

```{r survdat data}
#| echo = FALSE

####  Packages  ####
library(tidyverse)
library(gmRi)
library(targets)
library(matrixStats)


# Set theme
theme_set(theme_gmri())

#### Functions  ####


```

`r gmRi::use_gmri_style_rmd(css_file = "gmri_rmarkdown.css")`

### Species Used:

The species used here will match the 16 species included as part of the size-at-age analysis. Those species are:

```{r}
# Size at age species
saa_species <- c("acadian redfish", "american plaice", 
                 "atlantic cod", "atlantic herring", 
                 "atlantic mackerel", "black sea bass", 
                 "butterfish", "haddock", "pollock", "red hake", 
                 "scup", "silver hake", "summer flounder", 
                 "white hake", "winter flounder", 
                 "witch flounder", "yellowtail flounder")

# table for printing
spec_df <- data.frame("Species" = saa_species)
spec_df %>% knitr::kable()
```

Data for these `r nrow(spec_df)` species comes from fisheries independent trawl survey data collected by NOAA and the NEFSC.

```{r data prep}
# Load the regional temperatures from {targets}
withr::with_dir(rprojroot::find_root('_targets.R'), 
                tar_load(nefsc_stratified))

# Filter to just them, and the two time regimes
trawldat <- nefsc_stratified %>% 
  filter(comname %in% saa_species)

# Pull the main columns to speed things up
trawldat <- trawldat %>% 
  select(cruise6, station, stratum, tow, survey_area,
         svvessel, source, est_year, est_towdate,
         season, decdeg_beglat, decdeg_beglon, 
         avgdepth, bottemp, comname, scientific_name,
         abundance, biomass_kg, 
         catchsex, sum_weight_kg)


# Set up the regimes
trawldat <- trawldat %>% 
  mutate(temp_regime = ifelse(between(est_year, 2000, 2009), "Early Regime", NA),
         temp_regime = ifelse(between(est_year, 2010, 2019), "Warm Regime", temp_regime),
         temp_regime = ifelse(est_year < 2010, "Historical Context", temp_regime))
```


```{r summary totals}
# Summarize to total biomass per tow:

####  WORKING HERE  ####

# 1. station_totals = biomass and abundance from each tow for all species
# Totals up the abundance and biomass across sex*
station_totals <- trawldat %>% 
  group_by(est_year, survey_area, stratum, tow, est_towdate, avgdepth, bottemp, decdeg_beglat, decdeg_beglon, temp_regime, comname) %>% 
  summarise(
    biomass_kg = sum(biomass_kg, na.rm = T),
    .groups = "drop")



# 2. yrly_avgs = average and sd of biomass 
year_avgs <- station_totals %>% 
  group_by(temp_regime, comname, est_year) %>% 
  summarise(
    total_biomass   = sum(biomass_kg),
    avg_biomass     = mean(biomass_kg),
    biomass_sd      = sd(biomass_kg),
    avg_depth       = weightedMean(avgdepth, w = biomass_kg, na.rm = T),
    avg_temp        = weightedMean(bottemp, w = biomass_kg, na.rm = T),
    avg_lat         = weightedMean(decdeg_beglat, w = biomass_kg, na.rm = T),
    avg_lon         = weightedMean(decdeg_beglon, w = biomass_kg, na.rm = T),
    depth_sd        = weightedSd(avgdepth, w = biomass_kg, na.rm = T),
    temp_sd         = weightedSd(bottemp, w = biomass_kg, na.rm = T),
    lat_sd          = weightedSd(decdeg_beglat, w = biomass_kg, na.rm = T),
    lon_sd          = weightedSd(decdeg_beglon, w = biomass_kg, na.rm = T),
    .groups = "drop"
  )


# Variance across all years within each species
global_benchmarks <- station_totals %>% 
  group_by(comname) %>% 
  summarise(
    avg_biomass     = mean(biomass_kg),
    biomass_sd      = sd(biomass_kg),
    avg_depth       = weightedMean(avgdepth, w = biomass_kg, na.rm = T),
    avg_temp        = weightedMean(bottemp, w = biomass_kg, na.rm = T),
    avg_lat         = weightedMean(decdeg_beglat, w = biomass_kg, na.rm = T),
    avg_lon         = weightedMean(decdeg_beglon, w = biomass_kg, na.rm = T),
    depth_sd        = weightedSd(avgdepth, w = biomass_kg, na.rm = T),
    temp_sd         = weightedSd(bottemp, w = biomass_kg, na.rm = T),
    lat_sd          = weightedSd(decdeg_beglat, w = biomass_kg, na.rm = T),
    lon_sd          = weightedSd(decdeg_beglon, w = biomass_kg, na.rm = T),
    .groups = "drop"
  )
```


## Regional surface Temperatures

Using OISST data for the region, and a 30-year climatology, we know that the region has experienced the following trend in sea surface temperature anomalies:

```{r}
#| fig.height = 3

# What were temps doing over the whole region:
oisst_all <- oisst_access_timeseries("nmfs_trawl_regions", poly_name = "inuse strata", mac_os = "mojave")

# Make Yearly averages
oisst_yrs <- oisst_all %>% 
  mutate(time = as.Date(time)) %>% 
  group_by(year = lubridate::year(time)) %>% 
  summarise(
    temp = mean(area_wtd_sst),
    clim = mean(area_wtd_clim),
    anom = mean(area_wtd_anom))# %>% 
  #filter(between(year, 2000, 2019))


ggplot(oisst_yrs, aes(year, anom)) +
  geom_line(linetype = 2, size = 0.75) +
  geom_point(size = 2, color = gmri_cols("gmri blue")) +
  labs(title = "Survey Area Temperature Anomalies",
       x = "Year",
       y = "Temperature Anomaly °C")
```

## Yearly-Averaged Preferences

The following interactive plots display the biomass weighted averages for what temperatures, depths, and latitudes Each species was caught at as part of the groundfish survey.


```{r}
# Standardize all the actual measurements
z_data <- map_dfr(saa_species, function(filter_spec){
  
  glob_metrics <- filter(global_benchmarks, comname == filter_spec)
  year_avgs %>% 
    filter(comname == filter_spec) %>% 
    mutate(
      depth_z = (avg_depth - glob_metrics$"avg_depth") / glob_metrics$"depth_sd",
      temp_z  = (avg_temp - glob_metrics$"avg_temp") / glob_metrics$"temp_sd",
      lat_z   = (avg_lat - glob_metrics$"avg_lat") / glob_metrics$"lat_sd",
      lon_z   = (avg_lon - glob_metrics$"avg_lon") / glob_metrics$"lon_sd"
    )
  
})


```

For anything that is standdardized, it is done so against the average value for that species using data from all years.

```{r observable export}
# Reformat years as a date - messes with slider
# year_avgs <- mutate(year_avgs, est_year = as.Date(str_c(est_year, "-06-01")))

# Define data to use for js
ojs_define(pref_data = z_data)
```


Now we write the filtering function that will transform the data read from the CSV using the values of bill_length_min and island.

```{ojs}
// Filtering Function
filtered = transpose(pref_data).filter(function(trawldat) {
  return year_min < trawldat.est_year &&
         comname.includes(trawldat.comname);
})

```

To use our filter we’ll need some inputs, and we’ll want to be able to use the values of these inputs in our filtering function. To do this, we use the viewof keyword and with some standard Inputs:


## Plot Filtering



```{ojs}
viewof year_min = Inputs.range(
  [1970, 2019], 
  {value: 1980, step: 1, label: "Starting Year:"}
)

viewof comname = Inputs.checkbox(
  ["acadian redfish", "american plaice", 
   "atlantic cod", "atlantic herring", 
   "atlantic mackerel", "black sea bass", 
   "butterfish", "haddock", "pollock", "red hake", 
   "scup", "silver hake", "summer flounder", 
   "white hake", "winter flounder", 
   "witch flounder", "yellowtail flounder"], 
  { value: ["atlantic herring", "black sea bass", "atlantic cod"], 
    label: "Species:"
  }
)
```


Finally, we’ll plot the filtered data using Observable Plot (an open-source JavaScript library for quick visualization of tabular data):

## Center of Biomass Depth

```{ojs}
Plot.plot({
  style: "overflow: visible;",
  y:{grid : true, 
     reverse: true, 
     label: "↓ Depth (m)"},
  x:{grid : false, 
     label: "Year →", 
     tickFormat: d3.format(".1d")},
  marks: [
      Plot.line(filtered, {
        x: "est_year", 
        y: "avg_depth",
        stroke: "comname"}),
      Plot.text(filtered, Plot.selectLast({
        x: "est_year",
        y: "avg_depth",
        z: "comname",
        text: "comname",
        textAnchor: "start",
        dx: 3
    }))
    ]
  }
)
```


## Center of Biomass Temperature

```{ojs}
Plot.plot({
  style: "overflow: visible;",
  y:{grid : true, 
     label: "↑ Temperature (C)"},
  x:{grid : false, 
     label: "Year →", 
     tickFormat: d3.format(".1d")},
  marks: [
      Plot.line(filtered, {
      x: "est_year", 
      y: "avg_temp",
      stroke: "comname"}),
      Plot.text(filtered, Plot.selectLast({
        x: "est_year",
        y: "avg_temp",
        z: "comname",
        text: "comname",
        textAnchor: "start",
        dx: 3
    }))
    ]
  }
)
```

## Center of Biomass Latitude

```{ojs}
Plot.plot({
  style: "overflow: visible;",
  y:{grid : true, 
     label: "↑ Latitude (N)"},
  x:{grid : false, 
     label: "Year →", 
     tickFormat: d3.format(".1d")},
  marks: [
      Plot.line(filtered, {
      x: "est_year", 
      y: "avg_lat",
      stroke: "comname"}),
      Plot.text(filtered, Plot.selectLast({
        x: "est_year",
        y: "avg_lat",
        z: "comname",
        text: "comname",
        textAnchor: "start",
        dx: 3
    }))
    ]
  }
)
```


# Standardized Shifts:



## Standardized Depth

```{ojs}
Plot.plot({
  style: "overflow: visible;",
  y:{grid : true, 
     reverse: true, 
     label: "↓ Depth (z)"},
  x:{grid : false, 
     label: "Year →", 
     tickFormat: d3.format(".1d")},
  marks: [
      Plot.line(filtered, {
        x: "est_year", 
        y: "depth_z",
        stroke: "comname"}),
      Plot.text(filtered, Plot.selectLast({
        x: "est_year",
        y: "depth_z",
        z: "comname",
        text: "comname",
        textAnchor: "start",
        dx: 3
    }))
    ]
  }
)
```


## Standardized Temperature

```{ojs}
Plot.plot({
  style: "overflow: visible;",
  y:{grid : true, 
     label: "↑ Temperature (z)"},
  x:{grid : false, 
     label: "Year →", 
     tickFormat: d3.format(".1d")},
  marks: [
      Plot.line(filtered, {
      x: "est_year", 
      y: "temp_z",
      stroke: "comname"}),
      Plot.text(filtered, Plot.selectLast({
        x: "est_year",
        y: "temp_z",
        z: "comname",
        text: "comname",
        textAnchor: "start",
        dx: 3
    }))
    ]
  }
)
```

## Standardized Latitude

```{ojs}
Plot.plot({
  style: "overflow: visible;",
  y:{grid : true, 
     label: "↑ Latitude (z)"},
  x:{grid : false, 
     label: "Year →", 
     tickFormat: d3.format(".1d")},
  marks: [
      Plot.line(filtered, {
      x: "est_year", 
      y: "lat_z",
      stroke: "comname"}),
      Plot.text(filtered, Plot.selectLast({
        x: "est_year",
        y: "lat_z",
        z: "comname",
        text: "comname",
        textAnchor: "start",
        dx: 3
    }))
    ]
  }
)
```

